name: incubadora_local


services:
  postgres:
    image: postgres:16
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports: ["5432:5432"]
    volumes: ["pgdata:/var/lib/postgresql/data"]
    healthcheck:
      test: ["CMD-SHELL","pg_isready -U $$POSTGRES_USER"]
      interval: 10s
      timeout: 5s
      retries: 5


  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    depends_on:
      postgres:
        condition: service_healthy
    ports: ["8000:8000"]
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --proxy-headers --forwarded-allow-ips="*"
    healthcheck:
      test: ["CMD","curl","-sf","http://localhost:8000/docs"]
      interval: 15s
      timeout: 5s
      retries: 10
    profiles: ["dev","prod"]


  # Adminer para inspeccionar la DB desde el navegador
  adminer:
    image: adminer:4
    restart: unless-stopped
    ports: ["8080:8080"]
    profiles: ["dev"]


# Mosquitto (broker MQTT) para futuras pruebas IoT
  mosquitto:
    image: eclipse-mosquitto:2
    restart: unless-stopped
    ports: ["1883:1883","9001:9001"]
    volumes:
    - ./ops/mosquitto/mosquitto.conf:/mosquitto/config/mosquitto.conf:ro
    profiles: ["dev"]


# Nginx reverse-proxy con TLS local (self-signed)
  nginx:
    image: nginx:1.27-alpine
    restart: unless-stopped
    depends_on:
      - api
    ports: [ "8443:8443" ]
    volumes:
      - ./ops/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ops/nginx/certs:/etc/nginx/certs:ro
    profiles: [ "prod" ]


volumes:
  pgdata: